% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/seqrep_replace.R
\name{seqrep_replace}
\alias{seqrep_replace}
\title{Replace sequences with their representatives}
\usage{
seqrep_replace(data, clusters, var = NULL, alphabet, idxs = 1:10, ...)
}
\arguments{
\item{data}{A data frame, matrix, or character string vector containing sequence data (tibble will be converted with as.data.frame).}

\item{clusters}{A data frame, containing three columnsâ€”the index of original data, group memberships, and group size. Or the cluster data frame returned by \code{seqcluster} function.}

\item{var}{The list of columns containing the sequences. Default is NULL, i.e. all the columns. The function detects automatically whether the sequences are in the compressed (successive states in a character string) or extended format.}

\item{alphabet}{Optional vector containing the alphabet (the list of all possible states). Use this option if some states in the alphabet don't appear in the data or if you want to reorder the states. The specified vector MUST contain AT LEAST all the states appearing in the data. It may possibly contain additional states not appearing in the data. If NULL, the alphabet is set to the distinct states appearing in the data as returned by the seqstatl function. See details.}

\item{idxs}{A integer or an array of integers. The Default is 1:10, meaning replacing sequences in the 10 largest clusters with their representatives. If idxs=0, then all clusters will be replaces.}

\item{...}{options passed to the \code{seqdef} function for handling input data that is not in STS format.}
}
\value{
An object of class \code{stslist}.
}
\description{
Similar as \code{seqdef()}. It returns a \code{stslist} object but with elements replaced by their cluster representatives.
}
\examples{
data(mvad)
mvad.alphab <- c("employment", "FE", "HE", "joblessness", "school", "training")
mvad.seq <- seqdef(mvad, 17:86, xtstep = 6, alphabet = mvad.alphab)
seqdistance <- seqdist(mvad.seq, method="HAM")
clusters <- seqcluster(seqdistance, h=1.5, cmethod='complete')
mvad.new.seq <- seqrep_replace(mvad, clusters, var=17:86, alphabet, idxs=1:20, xtsetp=6)
}
